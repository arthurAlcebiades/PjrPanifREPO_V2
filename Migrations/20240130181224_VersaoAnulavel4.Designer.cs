// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PrjPaniMVCv2.Models;

#nullable disable

namespace PrjPaniMVCv2.Migrations
{
    [DbContext(typeof(PaniContext))]
    [Migration("20240130181224_VersaoAnulavel4")]
    partial class VersaoAnulavel4
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PrjPaniMVCv2.Models.ItemPedidoModel", b =>
                {
                    b.Property<int>("IdPedido")
                        .HasColumnType("integer");

                    b.Property<int>("IdProduto")
                        .HasColumnType("integer");

                    b.Property<int>("Quantidade")
                        .HasColumnType("integer");

                    b.Property<double>("ValorUnitario")
                        .HasColumnType("double precision");

                    b.HasKey("IdPedido", "IdProduto");

                    b.HasIndex("IdProduto");

                    b.ToTable("ItemPedido");
                });

            modelBuilder.Entity("PrjPaniMVCv2.Models.MotoristaModel", b =>
                {
                    b.Property<int>("IdMotorista")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdMotorista"));

                    b.Property<string>("ApelidoRota")
                        .HasColumnType("text");

                    b.Property<int>("IdPedido")
                        .HasColumnType("integer");

                    b.Property<string>("NomeMotorista")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("PedidoIdPedido")
                        .HasColumnType("integer");

                    b.Property<string>("Turno")
                        .HasColumnType("text");

                    b.HasKey("IdMotorista");

                    b.HasIndex("PedidoIdPedido");

                    b.ToTable("Motorista");
                });

            modelBuilder.Entity("PrjPaniMVCv2.Models.MotoristaPedido", b =>
                {
                    b.Property<int>("IdPedido")
                        .HasColumnType("integer");

                    b.Property<int>("IdMotorista")
                        .HasColumnType("integer");

                    b.HasKey("IdPedido", "IdMotorista");

                    b.HasIndex("IdMotorista");

                    b.ToTable("MotoristasPedidos");
                });

            modelBuilder.Entity("PrjPaniMVCv2.Models.PedidoModel", b =>
                {
                    b.Property<int>("IdPedido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdPedido"));

                    b.Property<DateTime?>("DataEntrega")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DataFinalRecorrencia")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DataInicioRecorrencia")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DataPedido")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("IdCliente")
                        .HasColumnType("integer");

                    b.Property<int?>("IdMotorista")
                        .HasColumnType("integer");

                    b.Property<string>("Observacao")
                        .HasColumnType("text");

                    b.Property<double?>("ValorTotal")
                        .HasColumnType("double precision");

                    b.HasKey("IdPedido");

                    b.HasIndex("IdCliente");

                    b.HasIndex("IdMotorista");

                    b.ToTable("Pedido");
                });

            modelBuilder.Entity("PrjPaniMVCv2.Models.ProdutoModel", b =>
                {
                    b.Property<int>("IdProduto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdProduto"));

                    b.Property<string>("NomeProduto")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.Property<double>("Preco")
                        .HasColumnType("double precision");

                    b.Property<string>("TipoUnidade")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("IdProduto");

                    b.ToTable("Produto", (string)null);
                });

            modelBuilder.Entity("PrjPaniMVCv2.Models.RotaModel", b =>
                {
                    b.Property<int>("IdRota")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdRota"));

                    b.Property<string>("ApelidoRota")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("IdRota");

                    b.ToTable("Rota");
                });

            modelBuilder.Entity("PrjPaniMVCv2.Models.UsuarioModel", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdUsuario"));

                    b.Property<DateTime?>("DataCadastro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP::date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.Property<string>("Senha")
                        .HasColumnType("text");

                    b.HasKey("IdUsuario");

                    b.ToTable("Usuario");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("PrjPaniMVCv2.Models.ClienteModel", b =>
                {
                    b.HasBaseType("PrjPaniMVCv2.Models.UsuarioModel");

                    b.Property<string>("CPF_CNPJ")
                        .IsRequired()
                        .HasColumnType("char(14)");

                    b.Property<string>("TelefoneContatoCliente")
                        .IsRequired()
                        .HasColumnType("char(11)");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("PrjPaniMVCv2.Models.ItemPedidoModel", b =>
                {
                    b.HasOne("PrjPaniMVCv2.Models.PedidoModel", "Pedido")
                        .WithMany("ItensPedido")
                        .HasForeignKey("IdPedido")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PrjPaniMVCv2.Models.ProdutoModel", "Produto")
                        .WithMany()
                        .HasForeignKey("IdProduto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pedido");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("PrjPaniMVCv2.Models.MotoristaModel", b =>
                {
                    b.HasOne("PrjPaniMVCv2.Models.PedidoModel", "Pedido")
                        .WithMany()
                        .HasForeignKey("PedidoIdPedido");

                    b.Navigation("Pedido");
                });

            modelBuilder.Entity("PrjPaniMVCv2.Models.MotoristaPedido", b =>
                {
                    b.HasOne("PrjPaniMVCv2.Models.MotoristaModel", "Motoristas")
                        .WithMany()
                        .HasForeignKey("IdMotorista")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PrjPaniMVCv2.Models.PedidoModel", "Pedidos")
                        .WithMany("MotoristaPedidos")
                        .HasForeignKey("IdPedido")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Motoristas");

                    b.Navigation("Pedidos");
                });

            modelBuilder.Entity("PrjPaniMVCv2.Models.PedidoModel", b =>
                {
                    b.HasOne("PrjPaniMVCv2.Models.ClienteModel", "Cliente")
                        .WithMany("Pedidos")
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PrjPaniMVCv2.Models.MotoristaModel", "Motorista")
                        .WithMany("Pedidos")
                        .HasForeignKey("IdMotorista");

                    b.OwnsOne("PrjPaniMVCv2.Models.EnderecoModel", "EnderecoEntrega", b1 =>
                        {
                            b1.Property<int>("PedidoModelIdPedido")
                                .HasColumnType("integer");

                            b1.Property<string>("Bairro")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("CEP")
                                .IsRequired()
                                .HasColumnType("char(9)");

                            b1.Property<string>("Cidade")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("Complemento")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("Estado")
                                .IsRequired()
                                .HasColumnType("char(2)");

                            b1.Property<string>("Logradouro")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("Numero")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("Referencia")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("PedidoModelIdPedido");

                            b1.ToTable("Pedido", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("PedidoModelIdPedido");
                        });

                    b.Navigation("Cliente");

                    b.Navigation("EnderecoEntrega");

                    b.Navigation("Motorista");
                });

            modelBuilder.Entity("PrjPaniMVCv2.Models.ClienteModel", b =>
                {
                    b.HasOne("PrjPaniMVCv2.Models.UsuarioModel", null)
                        .WithOne()
                        .HasForeignKey("PrjPaniMVCv2.Models.ClienteModel", "IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsMany("PrjPaniMVCv2.Models.EnderecoModel", "Enderecos", b1 =>
                        {
                            b1.Property<int>("IdUsuario")
                                .HasColumnType("integer");

                            b1.Property<int>("IdEndereco")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer");

                            NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b1.Property<int>("IdEndereco"));

                            b1.Property<string>("Bairro")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("CEP")
                                .IsRequired()
                                .HasColumnType("char(9)");

                            b1.Property<string>("Cidade")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("Complemento")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("Estado")
                                .IsRequired()
                                .HasColumnType("char(2)");

                            b1.Property<string>("Logradouro")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("Numero")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("Referencia")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<bool>("Selecionado")
                                .HasColumnType("boolean");

                            b1.HasKey("IdUsuario", "IdEndereco");

                            b1.ToTable("Endereco");

                            b1.WithOwner()
                                .HasForeignKey("IdUsuario");
                        });

                    b.Navigation("Enderecos");
                });

            modelBuilder.Entity("PrjPaniMVCv2.Models.MotoristaModel", b =>
                {
                    b.Navigation("Pedidos");
                });

            modelBuilder.Entity("PrjPaniMVCv2.Models.PedidoModel", b =>
                {
                    b.Navigation("ItensPedido");

                    b.Navigation("MotoristaPedidos");
                });

            modelBuilder.Entity("PrjPaniMVCv2.Models.ClienteModel", b =>
                {
                    b.Navigation("Pedidos");
                });
#pragma warning restore 612, 618
        }
    }
}
